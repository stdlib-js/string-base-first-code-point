// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t,r=Object.defineProperty,n=Object.prototype,o=n.toString,u=n.__defineGetter__,a=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__;function c(){return/[\uD800-\uDBFF][\uDC00-\uDFFF]/}t=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?r:function(e,t,r){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((_="value"in r)&&(i.call(e,t)||l.call(e,t)?(c=e.__proto__,e.__proto__=n,delete e[t],e[t]=r.value,e.__proto__=c):e[t]=r.value),f="get"in r,p="set"in r,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&u&&u.call(e,t,r.get),p&&a&&a.call(e,t,r.set),e};var _=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;t(c,"REGEXP",{configurable:!1,enumerable:!1,writable:!1,value:_});var f=/[\uDC00-\uDFFF]/,p=/[\uD800-\uDBFF]/;function b(e,t){var r,n,o,u,a,i;if(""===e||0===t)return"";if(1===t)return e=e.substring(0,2),_.test(e)?e:e[0];for(r=e.length,n="",a=0,i=0;i<r;i++){if(n+=o=e[i],a+=1,p.test(o)){if(i===r-1)break;u=e[i+1],f.test(u)&&(n+=u,i+=1)}if(a===t)break}return n}export{b as default};
//# sourceMappingURL=mod.js.map
